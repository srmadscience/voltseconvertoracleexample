package org.foo;
import org.voltdb.*;
public class EveryThing extends VoltProcedure {

public final SQLStmt sql9muwygax2sgjh = new SQLStmt("                         SELECT INST_COUNT                         FROM                             (SELECT COUNT(*) INST_COUNT FROM GV$DATABASE)                         WHERE INST_COUNT > 1                     ;");

public final SQLStmt sql9wudh5p6txsw8 = new SQLStmt("                         SELECT TAB_COUNT                         FROM                             (SELECT COUNT(*) TAB_COUNT FROM ALL_TABLES WHERE OWNER = 'GSMADMIN_INTERNAL' AND TABLE_NAME = 'SHARD_GROUP')                         WHERE TAB_COUNT > 0                     ;");

public final SQLStmt sqlfcayjrg2gvfkh = new SQLStmt("     SELECT LINE, POSITION, REPLACE(TEXT, CHR(10), ' '), ATTRIBUTE      FROM SYS.ALL_ERRORS A      WHERE A.NAME = :NAME AND A.TYPE = :TYPE AND A.OWNER = :OWNER     ORDER BY ATTRIBUTE, LINE, POSITION -- ERRORS FIRST       ;");

public final SQLStmt sql2y876wzshskyj = new SQLStmt(" DECLARE  REMAIN INTEGER;   COUNTER INTEGER;   OFFSET INTEGER;   INPUT_TXT CLOB;   LINE NVARCHAR2(256);   IDX INTEGER;   TXT_TABLE SYS.DBMS_SQL.VARCHAR2S;      CUR INTEGER;      I INTEGER;  BEGIN   INPUT_TXT := :SRC;   REMAIN := SYS.DBMS_LOB.GETLENGTH(INPUT_TXT);   COUNTER := 1;   IDX := 0;      WHILE REMAIN > 0 LOOP     IDX := IDX + 1;     IF REMAIN > 256 THEN       LINE := SYS.DBMS_LOB.SUBSTR( INPUT_TXT, 256, COUNTER );       IF ( LENGTHB( LINE ) > 256 ) THEN         LINE := SUBSTRB( LINE, 1, 256 );         OFFSET := LENGTH( LINE );       ELSE         OFFSET := 256;       END IF;       TXT_TABLE(IDX) := LINE;       COUNTER := COUNTER + OFFSET;       REMAIN := REMAIN - OFFSET;     ELSE       LINE := SYS.DBMS_LOB.SUBSTR( INPUT_TXT, REMAIN, COUNTER );       IF ( LENGTHB( LINE ) > 256 ) THEN         LINE := SUBSTRB( LINE, 1, 256 );         OFFSET := LENGTH( LINE );       ELSE         OFFSET := REMAIN;       END IF;       TXT_TABLE(IDX) := LINE;       COUNTER := COUNTER + OFFSET;       RE;");

public final SQLStmt sql0w16nmv3gwm0r = new SQLStmt(" SELECT TEXT FROM SYS.DBA_SOURCE  WHERE TYPE = :TYPE AND OWNER = :OWNER AND NAME = :NAME  ORDER BY LINE         ;");

public final SQLStmt sql8gnjy50gxbwnc = new SQLStmt(" DECLARE    L_SCHEMA      VARCHAR2(128);    L_PART1       VARCHAR2(128);    L_PART2       VARCHAR2(128);    L_DBLINK      VARCHAR2(128);    L_PART1_TYPE  NUMBER;    L_OBJID       NUMBER; BEGIN  DBMS_UTILITY.NAME_RESOLVE (     NAME          => :OBJ_NAME,     CONTEXT       => 2,  -- INTERESTED IN DBA_ VIEWS ONLY; 0 DOESN'T WORK IN 10G -- BUG 19528375    SCHEMA        => L_SCHEMA,      PART1         => L_PART1,     PART2         => L_PART2,    DBLINK        => L_DBLINK,     PART1_TYPE    => L_PART1_TYPE,     OBJECT_NUMBER => L_OBJID ); END;      ;");

public final SQLStmt sqlaxtxvqhdj1v87 = new SQLStmt(" SELECT * FROM (   SELECT OBJECT_NAME, OBJECT_ID,     CAST(LAST_DDL_TIME AS TIMESTAMP) LAST_MODIFIED,                DECODE(STATUS, 'INVALID', 'TRUE', 'FALSE') INVALID,                    'TRUE' RUNNABLE,                   PLSQL_DEBUG, PLSQL_OPTIMIZE_LEVEL, O.CREATED                   FROM SYS.DBA_OBJECTS O, DBA_PLSQL_OBJECT_SETTINGS S                   WHERE O.OWNER =:SCHEMA       AND S.OWNER(+) = :SCHEMA       AND S.NAME(+) = OBJECT_NAME       AND S.TYPE(+) = 'PACKAGE BODY'                   AND OBJECT_NAME = :PARENT_NAME                   AND OBJECT_TYPE = 'PACKAGE BODY' )                   ;");

public final SQLStmt sql636ag7mntvc6b = new SQLStmt("BEGIN DBMS_OUTPUT.DISABLE() ; END;;");

public final SQLStmt sql989c23hygnaz0 = new SQLStmt("BEGIN DBMS_OUTPUT.ENABLE() ; END;;");

public final SQLStmt sqlc3272jcfx6u00 = new SQLStmt("BEGIN DBMS_OUTPUT.GET_LINE(? ,? ) ; END;;");

public final SQLStmt sql05v7gfx8zm3vy = new SQLStmt("DECLARE   P_AIRLINE_LISTING ORINDADEMO.SIMPLE_EXAMPLES.AIRLINE_REFCURSOR_TYPE;   P_AIRPORT_LISTING ORINDADEMO.SIMPLE_EXAMPLES.AIRPORT_REFCURSOR_TYPE;   P_AIRCRAFT_LISTING ORINDADEMO.SIMPLE_EXAMPLES.AIRCRAFT_REFCURSOR_TYPE; BEGIN    SIMPLE_EXAMPLES.GETLISTS(     P_AIRLINE_LISTING => P_AIRLINE_LISTING,     P_AIRPORT_LISTING => P_AIRPORT_LISTING,     P_AIRCRAFT_LISTING => P_AIRCRAFT_LISTING   );   /* LEGACY OUTPUT:  DBMS_OUTPUT.PUT_LINE('P_AIRLINE_LISTING = ' || P_AIRLINE_LISTING); */    :P_AIRLINE_LISTING := P_AIRLINE_LISTING; --<-- CURSOR   /* LEGACY OUTPUT:  DBMS_OUTPUT.PUT_LINE('P_AIRPORT_LISTING = ' || P_AIRPORT_LISTING); */    :P_AIRPORT_LISTING := P_AIRPORT_LISTING; --<-- CURSOR   /* LEGACY OUTPUT:  DBMS_OUTPUT.PUT_LINE('P_AIRCRAFT_LISTING = ' || P_AIRCRAFT_LISTING); */    :P_AIRCRAFT_LISTING := P_AIRCRAFT_LISTING; --<-- CURSOR --ROLLBACK;  END; ;");

public final SQLStmt sql45jjxgtm6aac5 = new SQLStmt("DECLARE   P_AIRLINE_LISTING ORINDADEMO.SIMPLE_EXAMPLES.AIRLINE_REFCURSOR_TYPE;   P_AIRPORT_LISTING ORINDADEMO.SIMPLE_EXAMPLES.AIRPORT_REFCURSOR_TYPE;   P_AIRCRAFT_LISTING ORINDADEMO.SIMPLE_EXAMPLES.AIRCRAFT_REFCURSOR_TYPE; BEGIN    SIMPLE_EXAMPLES.GETLISTS(     P_AIRLINE_LISTING => P_AIRLINE_LISTING,     P_AIRPORT_LISTING => P_AIRPORT_LISTING,     P_AIRCRAFT_LISTING => P_AIRCRAFT_LISTING   );  END;;");

public final SQLStmt sqlgqj26vy22tm0w = new SQLStmt("DECLARE SQLDEVBIND1Z_1 VARCHAR2(32767):=:SQLDEVBIND1ZINIT1; SQLDEVBIND1Z_2 VARCHAR2(32767):=:SQLDEVBIND1ZINIT2; SQLDEVBIND1Z_3 VARCHAR2(32767):=:SQLDEVBIND1ZINIT3; SQLDEVBIND1Z_4 VARCHAR2(32767):=:SQLDEVBIND1ZINIT4;  BEGIN DECLARE   P_CUSTOMER CUSTOMERS%ROWTYPE;   P_BOOKING_TABLE ORINDADEMO.BOOKINGS_TABLE;    P_FLIGHTS_CURSOR ORINDADEMO.SIMPLE_EXAMPLES.FLIGHTS_REFCURSOR_TYPE;   P_BOOKING_DELETE_COUNT NUMBER;   P_STATUS_MESSAGE VARCHAR2(200); BEGIN     P_BOOKING_TABLE := BOOKINGS_TABLE( BOOKINGS_TYPE(TO_CHAR( SQLDEVBIND1Z_4),TO_CHAR( SQLDEVBIND1Z_3),TO_NUMBER( SQLDEVBIND1Z_2),SYSDATE,TO_CHAR( SQLDEVBIND1Z_1)));    P_CUSTOMER.NAME:= 'JOHN SMITH' ;   P_CUSTOMER.ADDRESS  := '123 ANY ROAD' ;   P_CUSTOMER.CITY := 'SPRINGFIELD' ;   P_CUSTOMER.ZIP := '94597' ;   P_CUSTOMER.BIRTHDATE := SYSDATE ;    -- P_CUSTOMER.ADDRESS,P_CUSTOMER.CITY,P_CUSTOMER.ZIP,P_CUSTOMER.BIRTHDATE,P_CUSTOMER.PHONE   -- MODIFY THE CODE TO INITIALIZE THE VARIABLE   -- P_BOOKING_TABLE := NULL;   P_BOOKING_DELETE_COUNT := 2;");

public final SQLStmt sqlgxkrdagaxn7up = new SQLStmt("DELETE BOOKINGS WHERE CUSTOMER_NAME = ? AND AIRLINE_NAME = ? AND FLIGHT_NUMBER = ? AND DEPARTURE_TIME = ? AND SEAT = ? ;");

public final SQLStmt sqlg0kadzhfa2jmk = new SQLStmt("INSERT INTO BOOKINGS (CUSTOMER_NAME, AIRLINE_NAME , FLIGHT_NUMBER, DEPARTURE_TIME, SEAT) VALUES (? , ? , ? , ? , ? );");

public final SQLStmt sql4fb5bx9zwu65f = new SQLStmt("INSERT INTO CUSTOMERS (NAME,ADDRESS,CITY,ZIP,BIRTHDATE,PHONE) VALUES (? ,? ,? ,? ,? ,? );");

public final SQLStmt sqlb6ty4f8a3has5 = new SQLStmt("SELECT  SIGNATURE,TYPE  FROM    ALL_IDENTIFIERS  WHERE   LINE = ?      AND ? BETWEEN COL AND COL + LENGTH(NAME)      AND OBJECT_NAME = ? AND OWNER = ?      AND NAME        = ?      AND OBJECT_TYPE = ?  ;");

public final SQLStmt sqlgq1kuhhfh5n87 = new SQLStmt("SELECT A.* FROM AIRCRAFT A ORDER BY AIRCRAFT_TYPE;");

public final SQLStmt sql73c6m5p06ahp5 = new SQLStmt("SELECT A.* FROM AIRLINES A ORDER BY AIRLINE_NAME;");

public final SQLStmt sqlbu661j8c3xtx4 = new SQLStmt("SELECT A.* FROM AIRPORTS A ORDER BY AIRPORT_CODE;");

public final SQLStmt sqlardtrztqc3q9c = new SQLStmt("SELECT DBTIMEZONE FROM DUAL;");

public final SQLStmt sql59pabmr5xh7ns = new SQLStmt("SELECT DISTINCT A.OBJECT_NAME, A.OVERLOAD, A.OBJECT_ID         FROM SYS.DBA_ARGUMENTS A, SYS.DBA_OBJECTS B          WHERE A.OBJECT_ID = B.OBJECT_ID AND          B.OWNER = ?  AND B.OBJECT_NAME = ?  AND B.OBJECT_TYPE = ?  ;");

public final SQLStmt sql37qjm6gytq8d2 = new SQLStmt("SELECT F.* FROM FLIGHTS F WHERE ROWNUM < 10 ORDER BY F.AIRCRAFT_TYPE;");

public final SQLStmt sql2vtya10cvpngk = new SQLStmt("SELECT LINE,POSITION,TEXT,ATTRIBUTE FROM USER_ERRORS WHERE TYPE=?  AND NAME=?  ;");

public final SQLStmt sql38pxpwwdr3jvj = new SQLStmt("SELECT POSITION, ARGUMENT_NAME, DATA_LEVEL, DATA_TYPE, IN_OUT,            CASE WHEN CHAR_USED = 'C' THEN CHAR_LENGTH ELSE DATA_LENGTH END   DATA_LENGTH,            DATA_PRECISION, DATA_SCALE, TYPE_OWNER, TYPE_NAME, TYPE_SUBNAME, PLS_TYPE FROM SYS.DBA_ARGUMENTS WHERE OWNER = :OWNER  AND OBJECT_ID = :ID AND OBJECT_NAME = :NAME AND NVL(OVERLOAD, '0') = :OVERLOAD ORDER BY SEQUENCE;");

public final SQLStmt sqlb4xr1nw5vtk2v = new SQLStmt("SELECT SYS_CONTEXT('USERENV', 'CURRENT_SCHEMA') FROM DUAL;");

public final SQLStmt sql4nq8cmya7frd9 = new SQLStmt("SELECT * FROM ALL_SOURCE WHERE OWNER IN (USER,? ) AND NAME = ?  AND TYPE IN ('PACKAGE BODY','PROCEDURE','FUNCTION')ORDER BY OWNER,NAME, TYPE, LINE;");

public final SQLStmt sqlfbxs6hr5105fn = new SQLStmt("SELECT * FROM V$OPTION O, DATABASE_COMPATIBLE_LEVEL V WHERE O.PARAMETER = 'OLAP' AND O.VALUE = 'TRUE' AND V.VALUE LIKE '12%';");

public final SQLStmt sql97qtbqudbrxr5 = new SQLStmt("SELECT * FROM V$VERSION WHERE BANNER LIKE '%ORACLE%';");

public final SQLStmt sql3277t5h3qk57y = new SQLStmt("SELECT DBMS_METADATA.GET_DDL(? ,? ,? ) FROM DUAL;");

public final SQLStmt sql658001za01gf9 = new SQLStmt("SELECT USER FROM DUAL;");

public final SQLStmt sql6yycm594c4gvj = new SQLStmt("SELECT A.NAME, A.OWNER, A.OBJECT_TYPE,A.OBJECT_NAME, A.TYPE, ST.NAME SUBTYPE FROM ALL_IDENTIFIERS A, ALL_IDENTIFIERS ST  WHERE A.SIGNATURE = ? AND A.USAGE = 'DECLARATION'  AND A.NAME = ? AND A.TYPE = ? AND A.OBJECT_NAME = ?  AND A.OBJECT_NAME = ST.OBJECT_NAME(+) AND A.OBJECT_TYPE = ST.OBJECT_TYPE(+) AND A.OWNER = ST.OWNER(+) AND ST.USAGE(+) = 'REFERENCE'  AND A.USAGE_ID = ST.USAGE_CONTEXT_ID(+) ;");

public final SQLStmt sql23ghvtf35uumf = new SQLStmt("SELECT BANNER FROM V$VERSION WHERE BANNER LIKE '%EXPRESS EDITION%';");

public final SQLStmt sqlfzur7h8fnkcvk = new SQLStmt("SELECT C.CONSTRAINT_NAME, F.COLUMN_NAME, POSITION FROM ALL_CONSTRAINTS C, ALL_CONS_COLUMNS F  WHERE C.OWNER = ?   AND  C.TABLE_NAME = ?  AND C.CONSTRAINT_TYPE = 'P'  AND F.OWNER = C.OWNER  AND F.CONSTRAINT_NAME = C.CONSTRAINT_NAME ORDER BY POSITION;");

public final SQLStmt sqla3d2dsqahwb1b = new SQLStmt("SELECT COLUMN_NAME, DATA_TYPE, DATA_LENGTH, NVL(DATA_SCALE,-42) DATA_SCALE, NVL(DATA_PRECISION,-42) DATA_PRECISION, NULLABLE FROM ALL_TAB_COLUMNS WHERE OWNER = ?  AND TABLE_NAME = ?  ORDER BY COLUMN_ID;");

public final SQLStmt sql7rhmtdnh02uq6 = new SQLStmt("SELECT COUNT(*) FROM ALL_OBJECTS WHERE OBJECT_NAME='SDO_RDF_TRIPLE_S'  AND OWNER='MDSYS' AND OBJECT_TYPE='TYPE';");

public final SQLStmt sql0zg5scs7brcfg = new SQLStmt("SELECT COUNT(1) FROM ALL_OBJECTS WHERE OBJECT_NAME = ? ;");

public final SQLStmt sqlfa8y6yqxpfadu = new SQLStmt("SELECT OWNER, TABLE_NAME, 'TABLE' KIND FROM ALL_TABLES WHERE OWNER IN (USER,? )  UNION ALL SELECT OWNER, VIEW_NAME, 'VIEW' FROM ALL_VIEWS WHERE OWNER IN (USER,? ) ORDER BY OWNER, TABLE_NAME;");

public final SQLStmt sqlaazt2vpnjyh70 = new SQLStmt("SELECT OWNER,PACKAGE_NAME, OBJECT_NAME, NVL(OVERLOAD,-1) OVERLOAD FROM ALL_ARGUMENTS WHERE DATA_LEVEL = 0  AND OWNER IN (USER, ? ) GROUP BY OWNER,PACKAGE_NAME, OBJECT_NAME, OVERLOAD ORDER BY OWNER,PACKAGE_NAME, OBJECT_NAME, OVERLOAD;");

public final SQLStmt sql3u9cy6ukg36qr = new SQLStmt("SELECT OWNER,PACKAGE_NAME, OBJECT_NAME, NVL(OVERLOAD,-1) OVERLOAD, NVL(ARGUMENT_NAME , 'OUT') ARGUMENT_NAME, DATA_TYPE, IN_OUT FROM ALL_ARGUMENTS WHERE PACKAGE_NAME = ?  AND   OBJECT_NAME  = ?   AND OWNER = ? AND   NVL(OVERLOAD,-1) = ?  AND DATA_LEVEL = 0  ORDER BY PACKAGE_NAME, OBJECT_NAME, OVERLOAD, SEQUENCE;");

public final SQLStmt sql2jnz9d8909cjy = new SQLStmt("SELECT PARAMETER,VALUE FROM NLS_SESSION_PARAMETERS   UNION ALL SELECT 'DB_TIMEZONE' NAME, DBTIMEZONE  VALUE FROM DUAL   UNION ALL SELECT 'SESSION_TIMEZONE' NAME, SESSIONTIMEZONE VALUE FROM DUAL  UNION ALL SELECT 'SESSION_TIMEZONE_OFFSET' NAME, TZ_OFFSET(SESSIONTIMEZONE) VALUE FROM DUAL  UNION ALL SELECT PARAMETER, VALUE FROM NLS_DATABASE_PARAMETERS WHERE PARAMETER='NLS_CHARACTERSET' ;");

public final SQLStmt sql2w2bchmqy42pj = new SQLStmt("SELECT SYS_CONTEXT('USERENV','SESSIONID') FROM DUAL;");

public final SQLStmt sqladg1a9absdtt8 = new SQLStmt("SELECT SYS_CONTEXT('USERENV','SID') FROM DUAL;");

public final SQLStmt sql1vrs73um8w176 = new SQLStmt("SELECT VALUE FROM DATABASE_COMPATIBLE_LEVEL V WHERE V.VALUE LIKE '12.2%' OR V.VALUE LIKE '13%';");

public void run () throws VoltAbortException {

// output variables

// 
// package results to send back to client

}
}
